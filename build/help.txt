
Invoeren eigen corpus (onderstreepte delen aanpassen):

    alpino2agens -t [4mmijncorpus[0m [4mdeel1.zip deel2.zip deel3.zip[0m | agens -a

Voor een overzicht van geldige invoerbestanden:

    alpino2agens

Nieuw corpus toevoegen in browser:

    nano corpora.txt && update

----------------------------------------------------------------

Met de browser kun je geen veranderingen aanbrengen in een corpus. Dat
kan wel met een interactieve sessie.

Interactieve sessie met AgensGraph starten:

    agens

Voorbeeld van een interactieve sessie:

 |  [docker:AlpinoGraph] user:~$ [1magens[0m
 |  agens (AgensGraph 2.2devel, based on PostgreSQL 10.4)
 |  Type "help" for help.
 |
 |  user=# [1m\dn[0m
 |      List of schemas
 |        Name      | Owner
 |  ----------------+-------
 |   alpinotreebank | user
 |   public         | user  [31;1m-- dit is geen corpus[0m
 |  (2 rows)
 |
 |  user=# [1mset graph_path = 'alpinotreebank';[0m
 |  SET
 |  user=# [1mmatch (w:word{lemma: 'fiets'}) return w.sentid, w.word;[0m
 |   sentid |  word
 |  --------+---------
 |   "269"  | "fiets"
 |   "3609" | "fiets"
 |   "697"  | "fiets"
 |  (3 rows)
 |
 |  user=# [1mmatch (w:word{lemma: 'fiets'}) set w.is_een_fiets = true;[0m
 |  UPDATE 3
 |  user=# [1mmatch (w:word{is_een_fiets: true}) return w.sentid, w.word;[0m
 |   sentid |  word
 |  --------+---------
 |   "697"  | "fiets"
 |   "269"  | "fiets"
 |   "3609" | "fiets"
 |  (3 rows)
 |
 |  user=# [1mmatch (w:word{is_een_fiets: true}) set w.is_een_fiets = NULL;[0m
 |  UPDATE 3
 |  user=# [1mmatch (w:word{is_een_fiets: true}) return w.sentid, w.word;[0m
 |   sentid | word
 |  --------+------
 |  (0 rows)
 |
 |  user=# [1m\q[0m
 |  [docker:AlpinoGraph] user:~$

----------------------------------------------------------------

[1mHulpmiddelen[0m

Met het programma [4mdact_attrib[0m kun je op basis van een xpath-expressie
extra attributen toevoegen aan een dact-corpus. Na het inlezen in
AlpinoGraph zijn die extra attributen beschikbaar met een prefix [4mx_[0m .

Voorbeeld:

    dact_attrib \
        infile.dact \
	outfile.dact \
	'//node[@lemma=("rood","groen","blauw","geel","oranje","bruin","paars","roze")]' \
	'node:kleur'

Na invoeren van outfile.dact in AlpinoGraph:

    match (w:word{x_kleur: true}) return w

Run [4mdact_attrib[0m zonder opties voor complete uitleg.

Het programma [4mdact_attrib[0m leest en schrijft dact-bestanden die gemaakt
zijn met DbXML versie 2. Het kan geen bestanden inlezen die gemaakt
zijn met DbXML versie 6. Probeer je dat wel, dan krijg je een foutmelding:

    unsupported btree version

Je kunt met [4mdact_attrib_v6[0m wel dact-bestanden inlezen die gemaakt zijn
met DbXML versie 6, maar dan krijg je als uitvoer ook een bestand
gemaakt met DbXML versie 6. Zo'n corpus kun je probleemloos invoeren
in AlpinoGraph, maar je kunt het niet gebruiken met andere toepassing
die gelinkt zijn met versie 2 van de DbXML-library.

